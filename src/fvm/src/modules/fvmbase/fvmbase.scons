Import('env')

srcBase = ['CException.cpp',
           'RLogInterface.cpp',
           'StorageSite.cpp',
           'CRConnectivity.cpp',
           'OneToOneIndexMap.cpp',
           'Matrix.cpp',
           'Mesh.cpp',
           'Cell.cpp',
           'GlobalFields.cpp',
           'Field.cpp',
           'Model.cpp',
           'MultiField.cpp',
           'MultiFieldReduction.cpp',
           'MultiFieldMatrix.cpp',
           'LinearSystem.cpp',
           'AMG.cpp',
           'BCGStab.cpp',
           'JacobiSolver.cpp',
           'GeomFields.cpp',
           'ThermalFields.cpp',
           'FlowFields.cpp',
           'StructureFields.cpp',
           'Discretization.cpp',
           'Linearizer.cpp',
	   'CellMark_impl.cpp',
	   'Octree.cpp',
	   'CellMark.cpp',
	   'MPM_Particles.cpp',
	   'Grid.cpp',
	   'FVMParticles.cpp',
	   'ElectricFields.cpp',
	   'StorageSiteMerger.cpp',
           'LinearSystemMerger.cpp',
           #'PC.cpp',
           'MeshAssembler.cpp',
	   'MeshDismantler.cpp',
           'ILU0Solver.cpp',
	   'SpikeSolver.cpp',
           'AABB.cpp',
           'KSearchTree.cpp',
           'IBManager.cpp',
	   'SpikeStorage.cpp'
           ]

env.createSharedLibrary('fvmbase',srcBase,['rlog', 'cgal'])

env.createATypedSharedLibrary('models_atyped',['models.cpp'],['rlog','fvmbase'])


env.createSwigModule('fvmbaseExt',sources=['baseExt.i'],
                     deplibs=['fvmbase','rlog', 'cgal'])

env.createATypedSwigModule('models_atyped',sources=['models.i'],
                     deplibs=['models_atyped','fvmbase','rlog'])

#env.createExe('testUQTK',['testUQTK.cpp'],
#              deplibs=['fvmbase','uqtk'])

#env.createExe('testOneDConduction',['testOneDConduction.cpp'],
#              deplibs=['fvmbase','uqtk'])
