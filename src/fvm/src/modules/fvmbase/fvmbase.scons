Import('env')

srcBase = ['CException.cpp',
           'RLogInterface.cpp',
           'StorageSite.cpp',
           'CRConnectivity.cpp',
           'OneToOneIndexMap.cpp',
           'Matrix.cpp',
           'Mesh.cpp',
           'Cell.cpp',
           'GlobalFields.cpp',
           'Field.cpp',
           'Model.cpp',
           'MultiField.cpp',
           'MultiFieldReduction.cpp',
           'MultiFieldMatrix.cpp',
           'LinearSystem.cpp',
           'AMG.cpp',
           'GeomFields.cpp',
           'ThermalFields.cpp',
           'FlowFields.cpp',
           'Discretization.cpp',
           'Linearizer.cpp'
           ]

env.createSharedLibrary('fvmbase',srcBase,['rlog'])

env.createATypedSharedLibrary('models_atyped',['models.cpp'],['rlog','fvmbase'])


env.createSwigModule('fvmbaseExt',sources=['baseExt.i'],
                     deplibs=['fvmbase','rlog'])

env.createATypedSwigModule('models_atyped',sources=['models.i'],
                     deplibs=['models_atyped','fvmbase','rlog'])

